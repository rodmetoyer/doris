% Simulation input file for a dual rotor simualtion
runname = 'tacticalScale';

% Environment
fluidtype = 'water';
fluidVelocity = [1.5;0.0;0]; % Approximately rive velocity

% Vehicle
bladeMass = 0.25; % kg
airfoiltype = 'SG6040';
aspectRatio = 7;
bladeLength = 0.5; %12*0.0254; % Inches times meters per inch
secChord = bladeLength/aspectRatio;
numSections = 12;       % Number of sections (whole number)
secWidth = bladeLength/numSections;
numBlades = 3;
bladeDZfrac = 0.0; % Blade dead zone fraction (Ro/R - see Spera 2009) %%%NOTE%%% Only used to compute twist right now. Forces are computed the entire length of the blade.
% twist = []; % To prescribe a twist make a 1 X numSections array, otherwise use the struct format and twist will be computed.
twist.AoAopt_deg = 8.0;
twist.numBlades = numBlades;
twist.bladeDZfrac = bladeDZfrac;
% vehicle body
vblength = 1.5;
vbradius = 0.1;
vbmass = 20.0;
I = [1/12*vbmass*(3*vbradius^2+vblength^2),0,0;0,1/12*vbmass*(3*vbradius^2+vblength^2),0;0,0,1/2*vbmass*vbradius^2];
vbcentermass = [0;0;0];
vbtetherpoint = [0;0;-vblength/2];
vbbuoypoint = [0;0;0.0]; % Center of buoyancy
vbreldensity = 1.0;    % Density of the vehilce body relative to water
rot1point = [0;0;-vblength/2]; % Point where the 1st rotor is located [g1,g2,g3]
rot2point = [0;0;vblength/2]; % Point where the 2nd rotor is located [h1,h2,h3]

% Simulation
totalSimTime = 10;
tstep = 0.01;

% Initial Conditions
initialYaw = 0*pi/180;
initialPitch = 90*pi/180;
initialRoll = 0*pi/180;
initialLateral = 0;
initialLongitudinal = 1;
initialVertical = 0;
initialSway = 0;
initialSurge = 0;
initialHeave = 0;
initialYawRate = 0;
initialPitchRate = 0;
initialRollRate = 0;

% Products
makeplots = true;
makemovie = true;
speedfactor = 1; % How much to slow the video by. e.g. 1/8;