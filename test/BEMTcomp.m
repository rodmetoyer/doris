% BEMTcomp.m

clear all; close all; clc;

addpath('..\src');
cd ..\
% set-up - load depBaseline to compare to Aerodyn
% inputfile = 'ballastTest.m';
% sim = simulation(inputfile);
sim = simulation.loadsim('BLUcase1');
cd test
lgdcolor = 'w'; % [0.8510 0.8510 0.8510]
fntsize = 9;

% Compare constant induction to BEMT
stopSpeed = 1.1;
stepSize = 0.02;
% stopSpeed = 22;
% stepSize = 0.5;
sim.vhcl.rotors(1).setAxialFlowFactor(1);
hfig = sim.vhcl.rotors(1).showmeCTQcurve(0:stepSize:stopSpeed,sim.fld);
noInductionX = hfig.CurrentAxes.Children.XData;
noInductionY = hfig.CurrentAxes.Children.YData;

sim.vhcl.rotors(1).setAxialFlowFactor(2/3);
hfig2 = sim.vhcl.rotors(1).showmeCTQcurve(0:stepSize:stopSpeed,sim.fld);
constInductionX = hfig2.CurrentAxes.Children.XData;
constInductionY = hfig2.CurrentAxes.Children.YData;

sim.vhcl.rotors(1).setAxialFlowFactor(1);
sim.vhcl.rotors(1).setBEMT([true,true]);
hfig3 = sim.vhcl.rotors(1).showmeCTQcurve(0:stepSize:stopSpeed,sim.fld);
bemtX = hfig3.CurrentAxes.Children.XData;
bemtY = hfig3.CurrentAxes.Children.YData;

hfig4 = figure('Position',[100 100 800 600]);
ax4 = axes('Parent',hfig4);
plot(ax4,noInductionX,noInductionY,'-.r',constInductionX,constInductionY,'b',bemtX,bemtY,':b','LineWidth',2.0);
legend('No Induction','Constant 1/3','BEMT','Color',lgdcolor,'Location','Best');
xlabel('TSR'); ylabel('C_T_Q');
hfig4.Color = 'none';
ax4.Color = 'none';
ax4.FontSize = fntsize;
ax4.XLabel.FontSize = fntsize;
ax4.XLabel.Visible = 'off';
ax4.XTickLabel = '';
ax4.YLabel.FontSize = fntsize;
grid(ax4,'on');
%axis(ax4,[0 10 -0.01 0.13]);
hfig4.Position = [200 200 380 180];
export_fig('output/figs/inductionConstVsBEMTutil_torque2g', '-png', '-transparent');
savefig('output/figs/inductionConstVsBEMTutil_torque2g.fig');
%% now do power
sim.vhcl.rotors(1).setBEMT([false,false]);
sim.vhcl.rotors(1).setAxialFlowFactor(1);
hfig = sim.vhcl.rotors(1).showmeCPcurve(0:stepSize:stopSpeed,sim.fld);

noInductionX = hfig.CurrentAxes.Children.XData;
noInductionY = hfig.CurrentAxes.Children.YData;
sim.vhcl.rotors(1).setAxialFlowFactor(2/3);

hfig2 = sim.vhcl.rotors(1).showmeCPcurve(0:stepSize:stopSpeed,sim.fld);
constInductionX = hfig2.CurrentAxes.Children.XData;
constInductionY = hfig2.CurrentAxes.Children.YData;
sim.vhcl.rotors(1).setAxialFlowFactor(1);
sim.vhcl.rotors(1).setBEMT([true,true]);

hfig3 = sim.vhcl.rotors(1).showmeCPcurve(0:stepSize:stopSpeed,sim.fld);
bemtX = hfig3.CurrentAxes.Children.XData;
bemtY = hfig3.CurrentAxes.Children.YData;

hfig4 = figure('Position',[100 100 800 600]);
ax4 = axes('Parent',hfig4);
plot(ax4,noInductionX,noInductionY,'-.r',constInductionX,constInductionY,'b',bemtX,bemtY,':b','LineWidth',2.0);
legend('No Induction','Constant 1/3','BEMT','Color',lgdcolor,'Location','Best');
xlabel('TSR'); ylabel('C_P');
hfig4.Color = 'none';
ax4.Color = 'none';
ax4.FontSize = fntsize;
ax4.XLabel.FontSize = fntsize;
ax4.YLabel.FontSize = fntsize;
hfig4.Position = [600 600 380 180];
grid(ax4,'on');
export_fig('output/figs/inductionConstVsBEMTutil_power2g', '-png', '-transparent');
savefig('output/figs/inductionConstVsBEMTutil_power2g.fig');
return
%% compare to Sheldahl and Klimas
CL_naca0015 = [1.069407935	0.04768205;...
2.37505005	0.233718643;...
4.214699789	0.446344202;...
6.319394878	0.68023519;...
8.433229462	0.876928433;...
10.29899204	0.983274725;...
12.43632819	1.084316627;...
13.23929809	1.116229131;...
14.31906412	1.121581394;...
16.2253016	1.063194819;...
17.86127117	1.00479867;...
18.40964086	0.972934039;...
19.31445085	0.590357398;...
20.39029995	0.61165155;...
22.27825845	0.627660463;...
24.42995665	0.670248768;...
28.718991	0.813878976;...
30.04944031	0.898950264;...
32.74689692	0.920301864;...
34.89859513	0.962890169;...
38.12483679	1.03208659;...
40.28959142	1.021535261;...
42.44520655	1.048181676;...
45.69233849	1.032354682;...
50.55585537	1.03784099;...
55.44809637	0.926420103;...
60.60277144	0.846892572;...
65.21821632	0.762031927;...
70.38986474	0.613422871;...
75.54976237	0.512639486;...
80.18479188	0.348069391;...
85.62018	0.226039726;...
90.52025486	0.082735059;...
95.42032972	-0.060569608;...
100.5906725	-0.203864701;...
105.4907473	-0.347169368;...
110.6519506	-0.453266717;...
115.5481086	-0.580629494;...
120.7053949	-0.670784952;...
125.5950246	-0.771577912;...
131.2967637	-0.877656111;...
135.6288843	-0.909386696;...
135.6367181	-0.941270477;...
140.5041519	-0.951726059;...
145.6248803	-0.893090542;...
150.4701182	-0.813208746;...
155.5738732	-0.685491705;...
160.4217224	-0.616237836;...
165.8819177	-0.839232805;...
171.0339815	-0.90813241;...
175.5645597	-0.647585433;...
180.5716972	-0.126635099];

CD_naca0015 = [1.261950287	0.005632305;...
4.47418738	0.005510744;...
13.04015296	0.021080622;...
15.44933078	0.068671571;...
16.52007648	0.100419131;...
17.45697897	0.124224735;...
18.66156788	0.145371203;...
20.40152964	0.288351715;...
22.40917782	0.325361833;...
24.416826	0.38621301;...
28.43212237	0.505266357;...
32.44741874	0.664054804;...
34.32122371	0.722262039;...
38.47036329	0.857204361;...
42.35181644	1.008050853;...
45.29636711	1.076813595;...
50.38240918	1.248806554;...
55.33460803	1.428751599;...
60.4206501	1.51332734;...
65.23900574	1.584668178;...
70.19120459	1.658652957;...
75.27724665	1.690248566;...
80.22944551	1.708604207;...
85.31548757	1.777285908;...
90.13384321	1.755911514;...
90.26768642	1.843323668;...
95.08604207	1.803406227;...
100.1720841	1.718445545;...
105.124283	1.702364099;...
110.210325	1.588264344;...
115.2963671	1.516548694;...
120.248566	1.505765262;...
125.334608	1.381069479;...
130.2868069	1.245782736;...
130.2868069	1.229888696;...
135.2390057	1.105197979;...
140.3250478	0.956661137;...
145.4110899	0.781634229;...
150.3632887	0.598665367;...
155.3154876	0.399802464;...
160.5353728	0.298942677;...
165.4875717	0.261669178;...
170.5736138	0.129026376;...
175.3919694	0.033479797;...
180.7456979	0.009436136];

hfig5 = sim.vhcl.rotors(1).blades(1).sections(1).airfoil.showme;
ax5 = hfig5.CurrentAxes;
hold on;
plot(ax5,CL_naca0015(:,1),CL_naca0015(:,2),'ob','DisplayName','Sheldahl C_L');
plot(ax5,CD_naca0015(:,1),CD_naca0015(:,2),'or','DisplayName','Sheldahl C_D');
ax5.XLim = [0 180];
ax5.YLim = [-1.5 1.85];
hfig5.Position = [100 100 1000 400];
hfig5.Color = 'none';
ax5.Color = 'none';
legend('Color','none');
export_fig('output/figs/clcdCompNACA0015', '-png', '-transparent');
return


% todo put the correct curves into aerodyn and compare.

% Get torque and power with and without BEMT
% For without, use axial factor 1 and 2/3 (induction factor 0 and 1/3)
speed = 0:0.01:1.0;
for i=1:1:length(speed)    
    sim.vhcl.rotors(1).angvel = [0;0;speed(i)];
    sim.vhcl.rotors(1).computeHydroLoads(sim.fld);
    torqueBEMT(:,i) = sim.vhcl.rotors(1).torqueCM;
end
sim.vhcl.rotors(1).setBEMT([false,false]);
sim.vhcl.rotors(1).setAxialFlowFactor(1.0);
for i=1:1:length(speed)    
    sim.vhcl.rotors(1).angvel = [0;0;speed(i)];
    sim.vhcl.rotors(1).computeHydroLoads(sim.fld);
    torque(:,i) = sim.vhcl.rotors(1).torqueCM;
end
sim.vhcl.rotors(1).setAxialFlowFactor(0.667);
sim.vhcl.rotors(1).setTangentialFlowFactor(1.002);
for i=1:1:length(speed)    
    sim.vhcl.rotors(1).angvel = [0;0;speed(i)];
    sim.vhcl.rotors(1).computeHydroLoads(sim.fld);
    torqueAxInd(:,i) = sim.vhcl.rotors(1).torqueCM;
end
sim.vhcl.rotors(1).setAxialFlowFactor(0.5);
sim.vhcl.rotors(1).setTangentialFlowFactor(1.0);
for i=1:1:length(speed)    
    sim.vhcl.rotors(1).angvel = [0;0;speed(i)];
    sim.vhcl.rotors(1).computeHydroLoads(sim.fld);
    torqueAxSub(:,i) = sim.vhcl.rotors(1).torqueCM;
end
hfig = figure('Color','w');
temp1 = sim.vhcl.rotors(1).blades(1).length/norm(sim.fld.velocity);
temp2 = 0.5*sim.fld.density*pi*sim.vhcl.rotors(1).blades(1).length^2*norm(sim.fld.velocity);
plot(speed*temp1,torqueBEMT(3,:).*speed/temp2,'r');
hold on
plot(speed*temp1,torque(3,:).*speed/temp2,'b');
plot(speed*temp1,torqueAxInd(3,:).*speed/temp2,'g');
plot(speed*temp1,torqueAxSub(3,:).*speed/temp2,'k');
hold off
xlabel('TSR'); ylabel('C_P')
legend('BEMT','No Induction','Const. Optimal','Const. 0.5','Location','Best');
% Torque curves
hfig = figure('Color','w');
plot(speed*temp1,torqueBEMT(3,:)/temp2,'r');
hold on
plot(speed*temp1,torque(3,:)/temp2,'b');
plot(speed*temp1,torqueAxInd(3,:)/temp2,'g');
plot(speed*temp1,torqueAxSub(3,:)/temp2,'k');
hold off
xlabel('TSR'); ylabel('C_T_Q')
legend('BEMT','No Induction','Const. Optimal','Const. 0.5','Location','Best');

sim.vhcl.rotors(1).setAxialFlowFactor(0.667);
sim.vhcl.rotors(1).setTangentialFlowFactor(1.002);
sim.vhcl.rotors(1).setBladePitch(3.5*pi/180);
for i=1:1:length(speed)    
    sim.vhcl.rotors(1).angvel = [0;0;speed(i)];
    sim.vhcl.rotors(1).computeHydroLoads(sim.fld);
    torquePitch(:,i) = sim.vhcl.rotors(1).torqueCM;
end
% Torque curvesptich
hfig = figure('Color','w');
plot(speed*temp1,torqueBEMT(3,:)/temp2,'r');
hold on
plot(speed*temp1,torquePitch(3,:)/temp2,'b');
plot(speed*temp1,torqueAxInd(3,:)/temp2,'g');
plot(speed*temp1,torqueAxSub(3,:)/temp2,'k');
hold off
title('With pitch');
xlabel('TSR'); ylabel('C_T_Q')
legend('BEMT','Const. Opt. Pitch','Const. Optimal','Const. 0.5','Location','Best');